# Root logger options
log4j.rootLogger=INFO, SPARK_ROLLING_BY_SIZE

# App root logger options
log4j.logger.com.github.bdp=${app.log.level}, APP_ROLLING_BY_SIZE, APP_ERROR_ROLLING_BY_SIZE

# Console appender
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%p] [%t] [%c{1}.%M(%L)] -- %m%n

# Rolling file by size appender for spark
log4j.appender.SPARK_ROLLING_BY_SIZE=org.apache.log4j.RollingFileAppender
log4j.appender.SPARK_ROLLING_BY_SIZE.MaxFileSize=64MB
log4j.appender.SPARK_ROLLING_BY_SIZE.MaxBackupIndex=16
log4j.appender.SPARK_ROLLING_BY_SIZE.File=${app.log.home}/spark-driver.log
log4j.appender.SPARK_ROLLING_BY_SIZE.layout=org.apache.log4j.PatternLayout
log4j.appender.SPARK_ROLLING_BY_SIZE.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%p] [%t] [%c{1}.%M(%L)] -- %m%n

# Rolling file by size appender for bdp-metric
log4j.appender.APP_ROLLING_BY_SIZE=org.apache.log4j.RollingFileAppender
log4j.appender.APP_ROLLING_BY_SIZE.MaxFileSize=64MB
log4j.appender.APP_ROLLING_BY_SIZE.MaxBackupIndex=16
log4j.appender.APP_ROLLING_BY_SIZE.File=${app.log.home}/${project.artifactId}-driver.log
log4j.appender.APP_ROLLING_BY_SIZE.layout=org.apache.log4j.PatternLayout
log4j.appender.APP_ROLLING_BY_SIZE.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%p] [%t] [%c{1}.%M(%L)] -- %m%n

# Rolling file by size appender for bdp-metric warns & errors
log4j.appender.APP_ERROR_ROLLING_BY_SIZE=org.apache.log4j.RollingFileAppender
log4j.appender.APP_ERROR_ROLLING_BY_SIZE.Threshold = WARN
log4j.appender.APP_ERROR_ROLLING_BY_SIZE.MaxFileSize=64MB
log4j.appender.APP_ERROR_ROLLING_BY_SIZE.MaxBackupIndex=16
log4j.appender.APP_ERROR_ROLLING_BY_SIZE.File=${app.log.home}/${project.artifactId}-driver.error.log
log4j.appender.APP_ERROR_ROLLING_BY_SIZE.layout=org.apache.log4j.PatternLayout
log4j.appender.APP_ERROR_ROLLING_BY_SIZE.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%p] [%t] [%c{1}.%M(%L)] -- %m%n

# -------------------------------------------- Not Used Yet ------------------------------------------------------------

# Rolling file by time appender for spark
# Warning: If you enable the following appender it will fill up your disk if you don't have a cleanup job!
# This uses the updated rolling file appender from log4j-extras that supports a reliable time-based rolling policy.
# See http://logging.apache.org/log4j/companions/extras/apidocs/org/apache/log4j/rolling/TimeBasedRollingPolicy.html
# Add "SPARK_ROLLING_BY_TIME" to flume.root.logger above if you want to use this
log4j.appender.SPARK_ROLLING_BY_TIME=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.SPARK_ROLLING_BY_TIME.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
log4j.appender.SPARK_ROLLING_BY_TIME.rollingPolicy.ActiveFileName=${app.log.home}/spark-driver.log
log4j.appender.SPARK_ROLLING_BY_TIME.rollingPolicy.FileNamePattern=${app.log.home}/spark-driver.log.%d{yyyyMMdd}
log4j.appender.SPARK_ROLLING_BY_TIME.layout=org.apache.log4j.PatternLayout
log4j.appender.SPARK_ROLLING_BY_TIME.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%p] [%t] [%c{1}.%M(%L)] ── %m%n

# Rolling file by time appender for bdp-metric
# Warning: If you enable the following appender it will fill up your disk if you don't have a cleanup job!
# This uses the updated rolling file appender from log4j-extras that supports a reliable time-based rolling policy.
# See http://logging.apache.org/log4j/companions/extras/apidocs/org/apache/log4j/rolling/TimeBasedRollingPolicy.html
# Add "APP_ROLLING_BY_TIME" to flume.root.logger above if you want to use this
log4j.appender.APP_ROLLING_BY_TIME=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.APP_ROLLING_BY_TIME.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
log4j.appender.APP_ROLLING_BY_TIME.rollingPolicy.ActiveFileName=${app.log.home}/${project.artifactId}-driver.log
log4j.appender.APP_ROLLING_BY_TIME.rollingPolicy.FileNamePattern=${app.log.home}/${project.artifactId}-driver.log.%d{yyyyMMdd}
log4j.appender.APP_ROLLING_BY_TIME.layout=org.apache.log4j.PatternLayout
log4j.appender.APP_ROLLING_BY_TIME.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%p] [%t] [%c{1}.%M(%L)] ── %m%n