spark {
    slide="5 seconds"
    window="60 seconds"
    checkpoint="${spark.checkpoint}"
}

hbase {
    zkQuorum="${hbase.zkQuorum}"
    zkPort="${hbase.zkPort}"
    schema {
        metric {
            table="metric"
            columnFamily="f"
            qualifier {
                name="name"
                hostname="hostname"
                timestamp="timestamp"
                value="value"
            }
        }
        alert {
            table="alert"
            columnFamily="f"
            qualifier {
                message="message"
                severity="severity"
                hostname="hostname"
                timestamp="timestamp"
                status="status"
            }
        }
        serverState {
            table="sever_state"
            columnFamily="f"
            qualifier {
                serverId="getServerId"
                srcType="srcType"
                timestamp="timestamp"
                severity="severity"
            }
        }
    }
}

kafka {
    brokerList="${kafka.brokerList}"
}

akka {
    loglevel=${app.log.level}
    loggers=["akka.event.slf4j.Slf4jLogger"]
}

stream {
    metric {
        cpuUsageEnabled=true
        cpuUsageKeyPrefix="cu"
        memUsedEnabled=true
        memUsedKeyPrefix="mu"
        watermark="60 seconds"
    }
    alert {
        enabled=true
        keyPrefix="al"
        watermark="86400 seconds"
        timeToLive=60
    }
}

cors.allowed-origin="*"