server.port=9090

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=${bdp.master.jdbc.url}
spring.datasource.username=${bdp.master.jdbc.user}
spring.datasource.password=${bdp.master.jdbc.password}
# create 每次运行该程序，没有表格会新建表格，表内有数据会清空 ; create-drop----每次程序结束的时候会清空表;
# update----每次运行程序，没有表格会新建表格，表内有数据不会清空，只会更新; validate----运行程序会校验数据与数据库的字段类型是否相同，不同会报错
# 所以如果要在启动项目时建表，需要将none改为create,并注释掉pom文件中的<exclude>*.sql</exclude>
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.data=classpath:/bdp-master-data-2018-09-01.sql
# 物理名称命名策略： 直接映射，不会做过多的处理
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# 在控制台输出sql
spring.jpa.show-sql=true
spring.mvc.dispatch-options-request=true

# redis
# Redis数据库索引（默认为0）,如果设置为1，那么存入的key-value都存放在select 1中
spring.redis.database=0
# Redis服务器地址
spring.redis.host=${bdp.master.redis.host}
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池的最大连接数（负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（负值表示没有限制）
spring.redis.pool.max-wait=600
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

redis.keyspace.server=server
redis.keyspace.serverIndex=idx_server